#!/usr/bin/env node --harmony-async-await

import parseArgs from 'minimist';
import path from 'path';
import {existsSync} from 'fs';
import {Magnet, ServerFactory} from '../';

process.env.NODE_ENV = process.env.NODE_ENV || 'production';

const appDirectory = process.cwd();

const argv = parseArgs(process.argv.slice(2), {
  alias: {
    h: 'help',
    p: 'port',
    e: 'env',
  },
  boolean: ['h'],
  default: {
    p: 3000,
  },
});

if (argv.help) {
  console.log(`
    Description
      Starts the application in production mode.
    Usage
      $ magnet start <dir> -p <port> -e <environment file path>
    If no directory is provided, the current directory will be assumed.
    Options
      --port, -p      A port number on which to start the application
      --env, -e       Environemnt config file path
      --help, -h      Displays this message
  `);
  process.exit(0);
}

let appEnvironment = {};

if (argv.env) {
  if (existsSync(path.join(appDirectory, argv.env))) {
    appEnvironment = require(path.join(appDirectory, argv.env));
    if (appEnvironment.default) {
      appEnvironment = appEnvironment.default;
    }
  } else {
    console.log('Environment file doesn\'t exist.');
    process.exit(1);
  }
} else {
  appEnvironment = {
    magnet: {
      port: argv.port,
      host: 'localhost',
    },
  };
}

const server = ServerFactory.create();

let magnet = new Magnet({
  appEnvironment,
  appDirectory,
  server,
});

if (existsSync(path.join(appDirectory, 'start.js'))) {
  let startFn = require(path.join(appDirectory, 'start.js'));

  if (startFn.default) {
    startFn = startFn.default;
  }

  magnet.setStartLifecycle(startFn);
}

magnet.start();
