#!/usr/bin/env node

import {existsSync, mkdirSync, writeFileSync} from 'fs';
import {basename, join, resolve} from 'path';
import parseArgs from 'minimist';
import logger from 'winston';

const argv = parseArgs(process.argv.slice(2), {
  alias: {
    h: 'help',
  },
  boolean: ['h'],
});

if (argv.help) {
  console.log(`
    Description
      Scaffolds a simple project structure to get started quickly.
    Usage
      $ magnet generate <dir>
    If no directory is provided, the current directory will be assumed.
    Options
      --help, -h      Displays this message
  `);
  process.exit(0);
}

const dir = resolve(argv._[0] || '.');

const basePackage = `{
  "name": "my-app",
  "description": "",
  "dependencies": {
    "magnet": "latest"
  },
  "scripts": {
    "dev": "magnet",
    "start": "magnet start"
  }
}`;

const baseApi = `export const route = {
  method: 'get',
  path: '/api',
  type: 'json',
};

export default async (req) => {
  return {hello: 'Magnet'};
};
`;

const baseMagnetConfig = `module.exports = {
  magnet: {
    port: 3000,
    host: 'localhost',
  }
};
`;

const baseIndex = `export const route = {
 method: 'get',
 path: '/',
 type: 'html',
};

export default () => \`<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Magnet</title>
</head>
<body>
  <h1>It works!</h1>
  <a href="/api">http://localhost:3000/api</a>
</body>
</html>\`;
`;

logger.info('Generating files');

if (!existsSync(dir)) {
  mkdirSync(dir);
}
if (!existsSync(join(dir, 'package.json'))) {
  writeFileSync(
    join(dir, 'package.json'),
    basePackage.replace(/my-app/g, basename(dir))
  );
}
if (!existsSync(join(dir, 'static'))) {
  mkdirSync(join(dir, 'static'));
}
if (!existsSync(join(dir, 'index.js'))) {
  writeFileSync(join(dir, 'index.js'), baseIndex);
}
if (!existsSync(join(dir, 'api.js'))) {
  writeFileSync(join(dir, 'api.js'), baseApi);
}
if (!existsSync(join(dir, 'magnet.config.js'))) {
  writeFileSync(join(dir, 'magnet.config.js'), baseMagnetConfig);
}

logger.info('Done.');
